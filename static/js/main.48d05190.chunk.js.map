{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","props","total","perPage","currentPage","onPageChange","pages","Math","ceil","amountOfPages","isFirstPage","isLastPage","className","href","onClick","map","page","App","useState","setCurrentPage","setPerPage","firstElement","lastElement","pageElements","id","defaultValue","onChange","event","Number","target","value","htmlFor","selectedPage","element","ReactDOM","render","document","getElementById"],"mappings":"mKAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCEIG,EAAa,SAACC,GACzB,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAQC,KAAKC,KAAKN,EAAQC,GAC1BM,EAAgBf,EAAW,EAAGY,GAC9BI,EAA8B,IAAhBN,EACdO,EAAaL,IAAUF,EAE7B,OACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAAeF,GAAe,YAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QACL,gBAAeH,EACfI,QAAS,WACa,IAAhBV,GACFC,EAAaD,EAAc,IAPjC,oBAcDK,EAAcM,KAAI,SAAAC,GAAI,OACrB,oBACEJ,UAAS,oBAAeI,IAASZ,GAAe,UADlD,SAGE,mBACE,UAAQ,WACRQ,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,WACPT,EAAaW,IALjB,SAQGA,SAKP,oBAAIJ,UAAS,oBAAeD,GAAc,YAA1C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVC,KAAK,QACL,gBAAeF,EACfG,QAAS,WACHV,IAAgBE,GAClBD,EAAaD,EAAc,IAPjC,wBCpDKa,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOd,EAAP,KAAoBe,EAApB,KACA,EAAgBD,mBAAS,IAAlBhB,EAAP,oBACA,EAA8BgB,mBAAS,GAAvC,mBAAOf,EAAP,KAAgBiB,EAAhB,KAIMC,EAAejB,EAAcD,EAAUA,EAAU,EACjDmB,EAHQf,KAAKC,KAAKN,EAAQC,KACHC,EAEIF,EAAQE,EAAcD,EACjDoB,EAAe7B,EAAW2B,EAAcC,GAW9C,OACE,sBAAKV,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCiB,EADjC,cACmDC,EADnD,eACqEpB,EADrE,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRY,GAAG,kBACHZ,UAAU,eACVa,aAAc,EACdC,SAxBkB,SAACC,GAC3BP,EAAWQ,OAAOD,EAAME,OAAOC,QAC/BX,EAAe,IAiBT,UAOE,wBAAQW,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBnB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aArC2B,SAAC2B,GAChCb,EAAea,MAuCb,6BACGT,EAAaR,KAAI,SAAAkB,GAAO,OACvB,oBAAI,UAAQ,OAAZ,wBAA0CA,IAAlBA,YC5DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.48d05190.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { getNumbers } from '../../utils';\n\ninterface PaginationProps {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (selectedPage: number) => void\n}\n\nexport const Pagination = (props: PaginationProps) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const pages = Math.ceil(total / perPage);\n  const amountOfPages = getNumbers(1, pages);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = pages === currentPage;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${isFirstPage && 'disabled'}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {amountOfPages.map(page => (\n        <li\n          className={`page-item ${page === currentPage && 'active'}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={`page-item ${isLastPage && 'disabled'}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => {\n            if (currentPage !== pages) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n\n  const pages = Math.ceil(total / perPage);\n  const isLastPage = pages === currentPage;\n  const firstElement = currentPage * perPage - perPage + 1;\n  const lastElement = isLastPage ? total : currentPage * perPage;\n  const pageElements = getNumbers(firstElement, lastElement);\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  const handleSelectedPageChange = (selectedPage: number) => {\n    setCurrentPage(selectedPage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstElement} - ${lastElement} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={5}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleSelectedPageChange}\n      />\n\n      <ul>\n        {pageElements.map(element => (\n          <li data-cy=\"item\" key={element}>{`Item ${element}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}